q()
help(diamonds)
require(ggplot2)
2+6
x=1
x+2
y<-1
x+y
install.packages("ggplot2")
typeof('1')
typeof(1l)
typeof(1L)
typeof(1)
typeof(1)
typeof(charToRaw('1'))
2*3
df <- as.data.frame(rbid(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
rownames(df)<-c(1,2,3,4)
colnames(df)<-c('A','B','C')
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
rownames(df)<-c(1,2,3,4)
colnames(df)<-c('A','B','C')
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
rownames(df)<-c(1,2,3,4)
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
)
rownames(df)<-c(1,2,3,4)
colnames(df)<-c('A','B','C')
df
install.packages("lattice")
library(ggplot2)
plot(diamonds$color)
getwd()
df <- as.data.frame(rbind(
c('A1','B1','C1'),
c('A2','B2','C2'),
c('A3','B3','C3'),
c('A4','B4','C4'),
), stringsAsFactors=FALSE)
rownames(df)<-c(1,2,3,4)
colnames(df)<-c('A','B','C')
?rnorm
help.search("rnorm")
args("rnorm")
rnorm
x <-
q
x <- ##incompleto
q
x<-11:30
x
x <- 11:30
x
x <- 1:10
x
library("ggplot2", lib.loc="~/R/win-library/3.2")
require('ggplot2')
data(package='ggplot2')
help("diamonds")
diamonds
head(diamonds)
View(diamonds)
summary(diamonds)
subset(diamonds,color %in% 'e')
subset(diamonds,color %in% 'E')
subset(diamonds, color %in% 'E')
subset(diamonds, clarity %in% 'IF')
subset(diamonds,cut %in% 'Fair')
subset(diamonds, cut %in% 'Fair')
subset(diamonds, cut %in% 'Fair')
help("subset")
subset(diamonds, color=="E")
diamonds
data(package='ggplot2')
diamonds
help("diamonds")
diamonds
library("ggplot2", lib.loc="~/R/win-library/3.2")
require('ggplot2')
data(package='ggplot2')
head(diamonds)
diamonds
data(package='ggplot2')
diamonds
View(diamonds)
diamonds
help("diamonds")
summary(diamonds)
head(diamonds)
diamonds
diamonds
data(package='ggplot2')
mpg
economics
diamonds
mpg
head(mpg)
mpg
head(mpg)
View(mpg)
summary(mpg)
presidential
diamonds
x <- vector("numeric", length = 10)
x
x <- c(T,F)
x
y <- (1.2, "A")
y <- c(1.2, "A")
typeof(y)
y
getwd()
class(y)
z <- as.character(y)
z <- as.integer(y)
x <- as.integer(x)
x
a <- list(1, "A", TRUE)
a
q <- matrix(nrow = 3, ncol = 3)
q
dim(m)
dim(q)
attributes(q)
class(q)
objeto <- matrix(1:9, nrow = 3, ncol = 3)
objeto
vector <- 1:10
vector
ls()
dir()
getwd()
dir()
x <- 4
x
class(x)
x <- c(4,"a",TRUE)
class(x)
x <- C(1,3,5)
x <- c(1,3,5)
y <- c(3,2,1)
rbind(x,y)
x <- list(2,"a","b",TRUE)
x[[2]]
x <- 1:4
y <- 2
x+y
x <- c(17,14,4,5,13,12,10)
x[x>10]==4
x[x==4]>10
x
[x==4]>10
x[x==4]>10
x[x<10]<-4
x
x[x>10]
x[x>10]==4
x[x>=10]<-4
x
x <- c(4,TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <-1:4
y <- 2
x+y
x <- c(3,5,1,10,12,6)
x[x<6]<-0
x
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R programing")
install_from_swirl("R Programming")
swirl()
sd
mydata <- rnorm(100)
sd(mydata)
sd(na.rm = FALSE, mydata)
sd(na.rm = FALSE, x = mydata)
args(lm)
args(sd)
args(paste)
search()
y <- 10
f <- function(x) {}
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if (x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if (!is.null(y))
z <- z+y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
g
library("swirl", lib.loc="~/R/win-library/3.2")
swirl()
swilr
library("swirl", lib.loc="~/R/win-library/3.2")
setwd("C:/Git/Github/ProgrammingAssignment2")
swirl()
head(flgs)
head(flags)
View(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
